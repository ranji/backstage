apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: dexcom-developer
  description: |
    Dexcom dev api
  links:
    - title: Website
      url: http://developer.dexcom.com
    - title: Documentation
      url: https://developer.dexcom.com/docs
    - title: Storybook
      url: https://backstage.io/storybook
    - title: Discord Chat
      url: https://discord.com/invite/EBHEGzX
  annotations:
    github.com/project-slug: backstage/backstage
    backstage.io/techdocs-ref: dir:.
    lighthouse.com/website-url: https://backstage.io
spec:
  type: openapi
  owner: CNCF
  lifecycle: production
  definition: |
    openapi: 3.1.0
info:
  version: '2.0'
  title: Dexcom Developer API
  termsOfService: https://example.com/terms/
  contact:
    email: contact@example.com
    url: http://example.com/contact
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  x-logo:
    url: https://redocly.github.io/openapi-template/logo.png
  description: >
    This is an **example** API to demonstrate features of the OpenAPI
    specification.


    # Introduction


    This API definition is intended to to be a good starting point for

    describing your API in 


    [OpenAPI/Swagger

    format](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md).


    It also demonstrates features of the

    [create-openapi-repo](https://github.com/Redocly/create-openapi-repo) tool

    and 


    the [Redoc](https://github.com/Redocly/Redoc) documentation engine. Beyond

    the standard OpenAPI syntax, we use a few 


    [vendor

    extensions](https://github.com/Redocly/Redoc/blob/master/docs/redoc-vendor-extensions.md).



    # OpenAPI Specification


    The goal of The OpenAPI Specification is to define a standard,

    language-agnostic interface to REST APIs which


    allows both humans and computers to discover and understand the capabilities

    of the service without access to source


    code, documentation, or through network traffic inspection. When properly

    defined via OpenAPI, a consumer can 


    understand and interact with the remote service with a minimal amount of

    implementation logic. Similar to what


    interfaces have done for lower-level programming, OpenAPI removes the

    guesswork in calling the service.
tags:
  - name: EGV
    description: Example echo operations.
servers:
  - url: https://developer.dexcom.com/api/v1
paths:
  /egvs:
    parameters:
      - name: startDate
        in: query
        description: Beginning of the time window
        schema:
          type: string
      - name: endDate
        in: query
        description: End of the time window
        schema:
          type: string
    get:
      tags:
        - EGV
      summary: GET /egvs
      description: >
        # Description


        The **/egvs** endpoint enables retrieval of a user's estimated glucose
        value (EGV) data, including trend and status information.


        ![EVG sample
        image](https://developer.dexcom.com/sites/all/themes/dexcom_apigee/images/egvs-g6.png)


        These query parameters specify the time window for the requested data;
        both are required. See the discussion of time in the [Endpoint
        Overview](https://developer.dexcom.com/endpoint-overview) section for
        more details on how they relate to device information.


        # Notes


        The G6 generation of sensors and transmitters introduced the concept of
        retrospective data smoothing to estimated glucose values. This smoothing
        incorporates three consecutive EGVs to produce a clearer, more readable
        trace for the user. Because three consecutive EGVs are not always
        available—for example, at the beginning or end of a sensor session—some
        EGVs cannot be smoothed. In these cases, the **realtimeValue** will be
        populated with a number, but the **smoothedValue** will be null.


        The rules for the **value** field are as follows:


        - If **smoothedValue** is not null, **value** is equal to
        **smoothedValue**

        - If **smoothedValue** is null, **value** is equal to **realtimeValue**


        The recommended method for consuming the **/egvs** endpoint is to use
        the **value** field.


        Due to how data is uploaded and processed, some records that initially
        have a null **smoothedValue** may later have this field populated, with
        the **value** field also changing per the rules above.


        For EGVs generated by G4 and G5 devices, the **smoothedValue** field
        will always return null as these systems do not have retrospective data
        smoothing.


        The documentation for an earlier version of this endpoint is available
        [here](https://developer.dexcom.com/get-egvs-v1).
      operationId: getEgvs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EGV-2'
              examples:
                response:
                  value:
                    unit: mg/dL
                    rateUnit: mg/dL/min
                    egvs:
                      - systemTime: '2018-02-06T09:12:35'
                        displayTime: '2018-02-06T01:12:35'
                        value: 122
                        realtimeValue: 121
                        smoothedValue: 122
                        status: null
                        trend: flat
                        trendRate: -0.5
                      - systemTime: '2018-02-06T09:07:35'
                        displayTime: '2018-02-06T01:07:35'
                        value: 123
                        realtimeValue: 124
                        smoothedValue: 123
                        status: null
                        trend: flat
                        trendRate: -0.5
                      - systemTime: '2018-02-06T09:02:35'
                        displayTime: '2018-02-06T01:02:35'
                        value: 125
                        realtimeValue: 125
                        smoothedValue: null
                        status: null
                        trend: flat
                        trendRate: -0.7
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-codeSamples:
        - lang: C#
          source: |
            API.v1.Echo echo = new API.v1.Echo();
            echo.message = "Hello World!");
            EchoResponse response = echo.post();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Success
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: PHP
          source: |
            $form = new \API\Entities\Echo();
            $form->setMessage("Hello World!");
            try {
                $pet = $client->echo()->post($form);
            } catch (UnprocessableEntityException $e) {
                var_dump($e->getErrors());
            }
components:
  securitySchemes:
    main_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://example.com/api/oauth/dialog
          scopes:
            read:users: read users info
            write:users: modify or remove users
    api_key:
      type: apiKey
      in: header
      name: api_key
    basic_auth:
      type: http
      scheme: basic
  schemas:
    EGV:
      type: object
      properties:
        systemTime:
          description: >-
            Time according to the system clock at which observation was made;
            nominally UTC
          type: string
        displayTime:
          description: Time displayed on the receiving device when the observation was made
          type: string
        value:
          description: >
            Estimated glucose value


            For G4 and G5 devices, equal to **realtimeValue**


            For G6 devices, equal to **smoothedValue** if present, otherwise
            equal to **realtimeValue**


            See the Notes section below for more details


            - 39 - indicates that the value was calculated and it was less than
            40; the value 39 is used in calculations but is not explicitly
            displayed to end

            - 40 to 400 - this is the measuring range of the Dexcom CGM

            - 401 - indicates that the value was calculated and it was greater
            than 400; the value 401 is used in calculations but is not
            explicitly displayed to end users
          type: number
        realtimeValue:
          description: |
            Estimated glucose value presented on receiving device in realtime

            See the Notes section below for more details

            *(nullable)*
          type: number
        smoothedValue:
          description: >
            Estimated glucose value presented retrospectively on receiving
            device after smoothing; G6 devices only


            See the Notes section below for more details


            *(nullable)*
          type: number
        status:
          description: >
            Explanation of EGV record; used when the **value** field is outside
            the measuring range


            *(nullable)*
          type: string
        trend:
          description: >
            General trend of EGV value movement; corresponds to **trendRate**
            field


            *(nullable)*
          type: string
        trendDate:
          description: |
            Rate at which glucose value is moving up or down

            *(nullable)*
          type: number
    EGV-2:
      type: object
      properties:
        unit:
          description: |
            Unit of measurement for **value**
            - "mg/dL"
            - "mmol/L"
          type: string
        rateUnit:
          description: |
            Unit of measurement for **trendRate**
            - "mg/dL/min"
            - "mmol/L/min"
          type: string
        egvs:
          description: Array of estimated glucose values
          type: array
          items:
            $ref: '#/components/schemas/EGV'
